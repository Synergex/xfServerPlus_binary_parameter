;
;Routine:       file_to_handle.dbl
;
;Description:   Loads the binary content of a file into a memory handle
;
;Author:        Steve Ives (Synergex Professional Services Group)
;                
;Date:          10th June 2005
;
;Availability:  All platforms
;
;Version:       8.3 for use with xfServerPlus binary parameters
;               8.1 for general use in loading and unloading file data to and
;               from memory handles.
;
;Disclaimer:    This code is provided "as is" and without guarantee or warranty
;               of any kind.  You may use the code freely, so long as this code
;               header and disclaimer remains unchanged. In doing so you accept
;               that neither the author or Synergex accept any responsibility
;               for any damage or loss which may result from the use of the code.
;                
.function file_to_handle ,^VAL

	a_file		,a		;File name to load (IN)
	a_mh		,n		;Memory handle (IN/OUT)

stack record ivars
	retval		,i4
	ch			,i4
	blocks		,i4
	chars		,i4

structure block
				,a32768

stack record avars
	buf			,a^size(block)

.proc

	clear ^i(ivars), avars

	open(ch=%syn_freechn,u,a_file) [$ERR_FNF=nf,$ERR_PROTEC=pf,ERR=err]
	if (0)
nf, 	retval=1	;File not found

	if (0)
pf, 	retval=2	;Protection violation

	if (0)
err,    retval=3	;Other error

	if (!retval)
	begin
		clear ^i(^m(a_mh))

		repeat
		begin
			clear buf
			gets(ch,buf,ef)
			blocks+=1
			a_mh = %mem_proc(DM_RESIZ,^size(block)*blocks,a_mh)
			^m(block[blocks],a_mh)=buf
		end

ef,		chars=%rsize
		if (chars)
		begin
			blocks+=1
			a_mh = %mem_proc(DM_RESIZ,^size(block)*blocks,a_mh)
			^m(block[blocks],a_mh)=buf
			a_mh = %mem_proc(DM_RESIZ,((^size(block)*(blocks-1))+(chars)),a_mh)
		end

	end

	if retval!=1
		close ch

	freturn retval

.end

